const g=(t,e)=>e.some(n=>t instanceof n);let h,l;function E(){return h||(h=[IDBDatabase,IDBObjectStore,IDBIndex,IDBCursor,IDBTransaction])}function M(){return l||(l=[IDBCursor.prototype.advance,IDBCursor.prototype.continue,IDBCursor.prototype.continuePrimaryKey])}const p=new WeakMap,b=new WeakMap,B=new WeakMap,f=new WeakMap,y=new WeakMap;function x(t){const e=new Promise((n,s)=>{const c=()=>{t.removeEventListener("success",a),t.removeEventListener("error",o)},a=()=>{n(u(t.result)),c()},o=()=>{s(t.error),c()};t.addEventListener("success",a),t.addEventListener("error",o)});return e.then(n=>{n instanceof IDBCursor&&p.set(n,t)}).catch(()=>{}),y.set(e,t),e}function S(t){if(b.has(t))return;const e=new Promise((n,s)=>{const c=()=>{t.removeEventListener("complete",a),t.removeEventListener("error",o),t.removeEventListener("abort",o)},a=()=>{n(),c()},o=()=>{s(t.error||new DOMException("AbortError","AbortError")),c()};t.addEventListener("complete",a),t.addEventListener("error",o),t.addEventListener("abort",o)});b.set(t,e)}let w={get(t,e,n){if(t instanceof IDBTransaction){if(e==="done")return b.get(t);if(e==="objectStoreNames")return t.objectStoreNames||B.get(t);if(e==="store")return n.objectStoreNames[1]?void 0:n.objectStore(n.objectStoreNames[0])}return u(t[e])},set(t,e,n){return t[e]=n,!0},has(t,e){return t instanceof IDBTransaction&&(e==="done"||e==="store")?!0:e in t}};function j(t){w=t(w)}function L(t){return t===IDBDatabase.prototype.transaction&&!("objectStoreNames"in IDBTransaction.prototype)?function(e,...n){const s=t.call(D(this),e,...n);return B.set(s,e.sort?e.sort():[e]),u(s)}:M().includes(t)?function(...e){return t.apply(D(this),e),u(p.get(this))}:function(...e){return u(t.apply(D(this),e))}}function P(t){return typeof t=="function"?L(t):(t instanceof IDBTransaction&&S(t),g(t,E())?new Proxy(t,w):t)}function u(t){if(t instanceof IDBRequest)return x(t);if(f.has(t))return f.get(t);const e=P(t);return e!==t&&(f.set(t,e),y.set(e,t)),e}const D=t=>y.get(t);function C(t,e,{blocked:n,upgrade:s,blocking:c,terminated:a}={}){const o=indexedDB.open(t,e),d=u(o);return s&&o.addEventListener("upgradeneeded",r=>{s(u(o.result),r.oldVersion,r.newVersion,u(o.transaction),r)}),n&&o.addEventListener("blocked",r=>n(r.oldVersion,r.newVersion,r)),d.then(r=>{a&&r.addEventListener("close",()=>a()),c&&r.addEventListener("versionchange",i=>c(i.oldVersion,i.newVersion,i))}).catch(()=>{}),d}const T=["get","getKey","getAll","getAllKeys","count"],A=["put","add","delete","clear"],m=new Map;function I(t,e){if(!(t instanceof IDBDatabase&&!(e in t)&&typeof e=="string"))return;if(m.get(e))return m.get(e);const n=e.replace(/FromIndex$/,""),s=e!==n,c=A.includes(n);if(!(n in(s?IDBIndex:IDBObjectStore).prototype)||!(c||T.includes(n)))return;const a=async function(o,...d){const r=this.transaction(o,c?"readwrite":"readonly");let i=r.store;return s&&(i=i.index(d.shift())),(await Promise.all([i[n](...d),c&&r.done]))[0]};return m.set(e,a),a}j(t=>({...t,get:(e,n,s)=>I(e,n)||t.get(e,n,s),has:(e,n)=>!!I(e,n)||t.has(e,n)}));const V=()=>{const t=C("mdDocs",1,{upgrade(o){o.createObjectStore("mdDocs",{keyPath:"id"})}});return{getDocs:async()=>await(await t).transaction("mdDocs","readonly").objectStore("mdDocs").getAll(),getDoc:async o=>await(await t).transaction("mdDocs","readonly").objectStore("mdDocs").get(o),saveDoc:async o=>{await(await t).transaction("mdDocs","readwrite").objectStore("mdDocs").put(o)},addDoc:async o=>{await(await t).transaction("mdDocs","readwrite").objectStore("mdDocs").add(o)},deleteDoc:async o=>{await(await t).transaction("mdDocs","readwrite").objectStore("mdDocs").delete(o)}}};export{V as u};
